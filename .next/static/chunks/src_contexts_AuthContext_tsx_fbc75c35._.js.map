{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isReady: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  signup: (name: string, email: string, password: string) => Promise<boolean>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Verificar se há um token salvo no localStorage\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n          // Verificar se o token é válido fazendo uma chamada para a API\n          const response = await fetch('/api/auth/verify', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData.user);\n          } else {\n            localStorage.removeItem('auth_token');\n          }\n        }\n      } catch (error) {\n        console.error('Error checking auth:', error);\n        localStorage.removeItem('auth_token');\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.token);\n        setUser(data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const signup = async (name: string, email: string, password: string): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('auth_token', data.token);\n        setUser(data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated: !!user,\n    isReady,\n    login,\n    logout,\n    signup,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAkBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,iDAAiD;YACjD,MAAM;oDAAY;oBAChB,IAAI;wBACF,MAAM,QAAQ,aAAa,OAAO,CAAC;wBACnC,IAAI,OAAO;4BACT,+DAA+D;4BAC/D,MAAM,WAAW,MAAM,MAAM,oBAAoB;gCAC/C,SAAS;oCACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;gCACpC;4BACF;4BAEA,IAAI,SAAS,EAAE,EAAE;gCACf,MAAM,WAAW,MAAM,SAAS,IAAI;gCACpC,QAAQ,SAAS,IAAI;4BACvB,OAAO;gCACL,aAAa,UAAU,CAAC;4BAC1B;wBACF;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,wBAAwB;wBACtC,aAAa,UAAU,CAAC;oBAC1B,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,mBAAmB;gBAC9C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,aAAa,OAAO,CAAC,cAAc,KAAK,KAAK;gBAC7C,QAAQ,KAAK,IAAI;gBACjB,OAAO;YACT;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;QACT;IACF;IAEA,MAAM,SAAS,OAAO,MAAc,OAAe;QACjD,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,oBAAoB;gBAC/C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;oBAAO;gBAAS;YAC/C;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,aAAa,OAAO,CAAC,cAAc,KAAK,KAAK;gBAC7C,QAAQ,KAAK,IAAI;gBACjB,OAAO;YACT;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;QACT;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;IACV;IAEA,MAAM,QAAyB;QAC7B;QACA,iBAAiB,CAAC,CAAC;QACnB;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;GApGgB;KAAA;AAsGT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}}]
}